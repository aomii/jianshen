package com.rabbit.fitness.admin.controller;

import com.github.pagehelper.PageInfo;
import com.rabbit.fitness.admin.service.TradeService;
import com.rabbit.fitness.admin.vo.TradeVo;
import com.rabbit.fitness.pojo.Student;
import com.rabbit.fitness.pojo.Trade;
import com.rabbit.fitness.student.service.StudentService;
import com.rabbit.fitness.utils.Result;
import org.apache.shiro.authz.annotation.Logical;
import org.apache.shiro.authz.annotation.RequiresRoles;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

@RestController
@RequestMapping("/trade")
@RequiresRoles(value = {"superadmin,gymadmin"},logical = Logical.OR)
public class TradeController {
    @Autowired
    private TradeService tradeService;
    @Autowired
    private StudentService studentService;

    /*查看签约*/
    @RequestMapping("/list")
    public Map<String,Object> list(@RequestParam(value = "page",defaultValue = "1",required = false)Integer currentPage,
                                   @RequestParam(value = "rows",defaultValue = "5",required = false)Integer pageSize, TradeVo vo){
        List<Trade> trades=tradeService.findAll(currentPage,pageSize,vo);
        /*分页*/
        PageInfo<Trade> Info=new PageInfo<>(trades);
        /*返回前端数据*/
        Map map=new HashMap();
        map.put("total",Info.getTotal());
        map.put("rows",Info.getList());
        return map;
    }

    /*后台删除or解约*/
    @RequestMapping("/delete")
    public Result delete(Integer stuid){
        /*根据sid查询student对象*/
        Student student=studentService.findStudent(stuid);
        /*判断其gid和cid是否为空*/
        if(student.getGid()!=null){
            return Result.error(500,"该学生尚未和场馆解约,不能删除");
        }
        if(student.getCid()!=null){
            return Result.error(500,"该学生尚未和私教解约,不能删除");
        }
        /*如果都为空,可以删除*/
        int result=tradeService.deleteTradeByStuId(stuid);
        if(result>0){
            return Result.success(0,"删除成功");
        }
        else {
            return new Result(400,"未知异常");
        }
    }
    /*签约（增加）*/
    /*续约or签私教（修改）*/
}
